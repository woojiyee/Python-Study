# BFS

# 알고리즘
# 이 문제는 다른 문제처럼 [0][0]에서 시작해서 [n][m]까지 한 번 돌아서 끝나지 않음
# 1이 어디 있느냐에 따라 1이 있는 곳부터 익은 토마토가 번져나가기 시작

# 상자엔 토마토가 있는 칸도 없는 칸도 존재
# 익은 토마토의 상하좌우에 익지 않은 토마토는 하루가 지나면 익는다

# 문제에서 주어지는 정보 
# - m : 상자 가로 크기
# - n : 상자 세로 크기 
# - -1 : 토마토가 없는 칸
# - 0 : 익지 않은 토마토
# - 1 : 익은 토마토
#1st
# 상자의 가로, 세로 칸 수

# 문제에서 원하는 출력
# 토마토들이 다 익는 최소 일수
# 저장될 때부터 모든 토마토가 익어있는 상태 : 0 출력
# 토마토가 모두 익지는 못하는 상황: -1 출력
m, n = map(int,input().split())

graph = [[i for i in map(int,input().split())] for _ in range(n)]

# 상하좌우 칸으로 이동
dy = [-1,1,0,0]
dx = [0,0,-1,1]

